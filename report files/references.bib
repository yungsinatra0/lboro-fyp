@online{mdpop,
    author = {{National Bureau of Statistics of the Republic of Moldova}},
    year = "2024",
    title = "Population",
    url = "https://statistica.gov.md/en/statistic_indicator_details/25",
    addendum = "(Accessed: 22 Oct 2024)"
}

@online{mdpoverty,
    author = "BBC",
    year = "2024",
    title = "Moldova country profile",
    url = "https://www.bbc.co.uk/news/world-europe-17601580",
    addendum = "(Accessed: 22 Oct 2024)"
}

@online{mdega,
    author = {{E-Governance Agency}},
    title = "About EGA",
    URL = "https://egov.md/en/about-ega",
    addendum = "(Accessed: 22 Oct 2024)"
}

@online{mdcabinet,
    author = {{E-Governance Agency}},
    title = "Citizen's Government Portal",
    URL = "https://egov.md/en/content/citizens-government-portal",
    addendum = "(Accessed: 22 Oct 2024)"
}

@online{mdehr,
    author = "Aliona Ciurcă",
    title = "Sistemul informațional automatizat din spitale: cum funcționează în R. Moldova și ce cred medicii că ar trebui ajustat",
    year = "2021", 
    URL = "https://www.zdg.md/stiri/stiri-sociale/sistemul-informational-automatizat-din-spitale-cum-functioneaza-in-r-moldova-si-ce-cred-medicii-ca-ar-trebui-ajustat/",
    addendum = "(Accessed: 22 Oct 2024)"
}

@online{mdstrategy,
    author = {{United Nations Development Programme}},
    title = "A 100\% digital state: The strategy for digital transformation of the Republic of Moldova for 2023-2030, approved by the Executive",
    year = "2023",
    URL = "https://www.undp.org/moldova/press-releases/100-digital-state-strategy-digital-transformation-republic-moldova-2023-2030-approved-executive",
    addendum = "(Accessed: 22 Oct 2024)"
    }

@online{mduni,
    author = {{USMF}},
    title = "Brief history",
    year = "2023",
    URL = "https://usmf.md/en/brief-history-usmf",
    addendum = "(Accessed: 22 Oct 2024)"
}

@article{sdlc1,
author = {Ruparelia, Nayan B.},
title = {Software development lifecycle models},
year = {2010},
issue_date = {May 2010},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {35},
number = {3},
issn = {0163-5948},
url = {https://doi.org/10.1145/1764810.1764814},
doi = {10.1145/1764810.1764814},
abstract = {This history column article provides a tour of the main software development life cycle (SDLC) models. (A lifecycle covers all the stages of software from its inception with requirements definition through to fielding and maintenance.) System development lifecycle models have drawn heavily on software and so the two terms can be used interchangeably in terms of SDLC, especially since software development in this respect encompasses software systems development. Because the merits of selecting and using an SDLC vary according to the environment in which software is developed as well as its application, I discuss three broad categories for consideration when analyzing the relative merits of SDLC models. I consider the waterfall model before the other models because it has had a profound effect on software development, and has additionally influenced many SDLC models prevalent today. Thereafter, I consider some of the mainstream models and finish with a discussion of what the future could hold for SDLC models.},
journal = {SIGSOFT Softw. Eng. Notes},
month = may,
pages = {8–13},
numpages = {6},
keywords = {wheel-and-spoke, waterfall, unified, spiral, incremental, Vmodel, SEN history column, SDLC, RAD, B-model}
}

  
@article{sdlc2, 
title={A Comprehensive Review of Software Development Life Cycle methodologies: Pros, Cons, and Future Directions },
author={Qahtan Yas and Abdulbasit Alazzawi and Bahbibi Rahmatullah}, 
volume={4}, 
url={https://journal.esj.edu.iq/index.php/IJCM/article/view/664}, 
DOI={10.52866/ ijcsm.2023.04.04.014}, 
abstract={The software development process needs specific and studied steps within a reliable plan to achieve the requirements for the success of any project.Software development life cycle (SDLC) methodologies have provided several models that meet the needs of the various proposed projects. These methodologies present various scenarios that can be applied in the process of developing systems to make them more efficient and predictive. The paper aims to illuminate the paramount Software Development Life Cycle (SDLC) methodologies by conducting a comprehensive review of the pros and cons of the various models widely used for software design. Furthermore, the paper discusses fundamental trajectories that are shaping the future landscape of SDLC methodologies. This review included two main types of software development life cycle approaches such as traditional SDLC (heavy-weight) and agile SDLC (light-weight) approaches. The traditional approach included several models such as the Waterfall model, Iterative model, Spiral model, V-Model, and Big Bang Model. Whereas, the agile approach included various models such as the eXtreme Programming (XP) Model, scrum Model, Feature Driven Development (FDD) Model, and Kanban Model. A comprehensive analytical study of all software development life cycle models was achieved and highlighted their most prominent strengths and weaknesses of them. SDLC methodologies wield substantial ramifications across a multitude of sectors, contingent upon several models tailored to individual developmental and research contexts. In culmination, the paper furnishes an all-encompassing perspective on paramount SDLC models, encompassing two principal paradigms: the traditional and the agile approaches. These encompass fundamental sub-models that encapsulate pioneering models poised for application in system development, thus facilitating their refinement more efficiently and predictably.}, 
number={4}, 
journal={Iraqi Journal For Computer Science and Mathematics},  
year={2023}, 
month=Nov, 
pages={173–190} 
}

@article{testing,
  title={Software testing techniques},
  author={Luo, Lu},
  journal={Institute for software research international Carnegie mellon university Pittsburgh, PA},
  volume={15232},
  number={1-19},
  pages={19},
  year={2001}
}

@article{waterfall,
  title={A comparison between three SDLC models waterfall model, spiral model, and Incremental/Iterative model},
  author={Alshamrani, Adel and Bahattab, Abdullah},
  journal={International Journal of Computer Science Issues (IJCSI)},
  volume={12},
  number={1},
  pages={106},
  year={2015}
}

@article{agile,
  author={Sunner, Daminderjit},
  booktitle={2016 2nd International Conference on Applied and Theoretical Computing and Communication Technology (iCATccT)}, 
  title={Agile: Adapting to need of the hour: Understanding Agile methodology and Agile techniques}, 
  year={2016},
  volume={},
  number={},
  pages={130-135},
  keywords={Software;Crystals;Programming;Testing;Documentation;Planning;Organizations;Agile;Agile methods;Agile techniques},
  doi={10.1109/ICATCCT.2016.7911978}
  }

  @online{agile2,
    author = "Ward Cunningham",
    title = "Manifesto for Agile Software Development",
    year = "2001",
    URL = "https://agilemanifesto.org/",
    addendum = "(Accessed: 25 Oct 2024)"
  }

@article{scrumban,
  title={An empirical study of Scrumban formation based on the selection of scrum and Kanban practices},
  author={Alqudah, Mashal and Razali, Rozilawati},
  journal={Int. J. Adv. Sci. Eng. Inf. Technol},
  volume={8},
  number={6},
  pages={2315--2322},
  year={2018}
}

@article{hybrid1,
author = {Andrew Gemino and Blaize Horner Reich and Pedro M. Serrador},
title ={Agile, Traditional, and Hybrid Approaches to Project Success: Is Hybrid a Poor Second Choice?},
journal = {Project Management Journal},
volume = {52},
number = {2},
pages = {161-175},
year = {2021},
doi = {10.1177/8756972820973082},
URL = {https://doi.org/10.1177/8756972820973082},
eprint = {https://doi.org/10.1177/8756972820973082},
abstract = {Three project management approaches—traditional, agile, and hybrid—were considered in this study. Results from an international study, including 477 cross-industry projects, indicated that 52\% of projects could be categorized as hybrid approaches. A regression analysis using multiple outcome measures indicated substantial explanatory power (0.21 < R 2 <0.41). Analysis suggested that hybrid and agile approaches significantly increase stakeholder success over traditional approaches while achieving the same budget, time, scope, and quality outcomes. Hybrid approaches were found to be similar in effectiveness to fully agile approaches. Results validate decisions by practitioners to combine agile and traditional practices and suggest that hybrid is a leading project management approach.}
}

@inproceedings{hybrid2,
title={How are hybrid development approaches organized? A systematic literature review},
author={Prenner, Nils and Unger-Windeler, Carolin and Schneider, Kurt},
booktitle={Proceedings of the International Conference on Software and System Processes},
pages={145--154},
year={2020}
}